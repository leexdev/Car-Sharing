@model CarSharing.Models.VehicleManagementModel

@{
    ViewBag.Title = "CreateVehicle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CreateVehicle</h2>

@using (Html.BeginForm("CreateVehicle", "UserInfo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container" style="margin-top: 100px">
        <div class="modal-content">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Province.Name, new { id = "SelectedProvinceNameCreate" })
            @Html.HiddenFor(model => model.District.name, new { id = "SelectedDistrictNameCreate" })
            <div class="modal-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.VehicleBrand.VehicleType.VehicleTypeName)
                            <select id="VehicleTypeIdCreate" name="VehicleTypeId" class="form-control mb-3" required>
                                <option disabled selected>Chọn loại xe</option>
                                @foreach (var vehicleType in Model.ListVehicleTypes)
                                {
                                    <option value="@vehicleType.VehicleTypeId">@vehicleType.VehicleTypeName</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.VehicleVariant.VariantName)
                            <select id="Vehicle_VariantIdCreate" name="Vehicle.VariantId" class="form-control mb-3" required>
                                <option disabled selected>Chọn loại xe trước</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.VehicleBrand.BrandName)
                            <select id="Vehicle_BrandIdCreate" name="Vehicle.BrandId" class="form-control mb-3" required>
                                <option disabled selected>Chọn loại xe trước</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-7 col-md-8">
                                    @Html.LabelFor(model => model.Vehicle.ImageVehicle)
                                    <input type="file" id="ImageUpLoadCreate" class="mb-3 form-control border-0" name="ImageUpLoad" style="width: 105px" required />
                                </div>
                                <div class="col-5 col-md-4">
                                    <div id="imagePreviewCreate" style="width: 100px; height:100px"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.District.Province.Name)
                            <select name="Province.Code" class="form-control mb-3" id="ProvinceCodeCreate" required>
                                <option disabled selected>Chọn tỉnh</option>
                                @foreach (var province in Model.ListProvinces)
                                {
                                    <option value="@province.Code" data-name="@province.Name">@province.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.District.name)
                            <select name="District.code" class="form-control mb-3" id="DistrictCodeCreate" required>
                                <option disabled selected>Chọn tỉnh trước</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.VehicleName)
                            @Html.TextBoxFor(model => model.Vehicle.VehicleName, new { @class = "form-control mb-3", required = "required" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.Year)
                            @Html.TextBoxFor(model => model.Vehicle.Year, new { @class = "form-control mb-3", required = "required" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.RegistrationNumber)
                            @Html.TextBoxFor(model => model.Vehicle.RegistrationNumber, new { @class = "form-control mb-3", required = "required" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Vehicle.VehiclePrice)
                            @Html.TextBoxFor(model => model.Vehicle.VehiclePrice, new { @class = "form-control mb-3", required = "required" })
                        </div>
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Vehicle.Content)
                            <textarea class="form-control ckeditor-content mb-3" name="Vehicle.Content" id="inputContentCreate"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer d-flex justify-content-center my-4">
                    <button type="button" class="btn btn-secondary me-2" data-dismiss="modal" style="width: 140px">Quay lại</button>
                    <input type="submit" id="submitButton" value="Thêm" class="btn btn-success ms-2" style="width: 140px">
                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script src="~/Content/plugin/ckeditor/ckeditor.js"></script>
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '/UserInfo/GetVariants',
                type: 'GET',
                data: { vehicleTypeId: vehicleTypeId },
                success: function (result) {
                    var variantsDropdown = $("#Vehicle_VariantId");
                    variantsDropdown.empty();

                    variantsDropdown.prepend($('<option disabled selected></option>').text("Chọn loại hộp số"));

                    $.each(result, function (index, variant) {
                        if (variant.VariantId === variantId) {
                            variantsDropdown.append($('<option></option>').val(variantId).text(variant.VariantName).attr('data-name', variant.VariantName).attr('selected', 'selected'));
                        } else {
                            variantsDropdown.append($('<option></option>').val(variant.variantId).text(variant.VariantName).attr('data-name', variant.VariantName));
                        }
                    });
                },
            });

            $.ajax({
                url: '/UserInfo/GetBrands',
                type: 'GET',
                data: { vehicleTypeId: vehicleTypeId },
                success: function (result) {
                    var brandsDropdown = $("#Vehicle_BrandId");
                    brandsDropdown.empty();

                    brandsDropdown.prepend($('<option disabled selected></option>').text("Chọn hãng xe"));

                    $.each(result, function (index, brand) {
                        if (brand.BrandId === brandId) {
                            brandsDropdown.append($('<option></option>').val(brandId).text(brand.BrandName).attr('data-name', brand.BrandName).attr('selected', 'selected'));
                        } else {
                            brandsDropdown.append($('<option></option>').val(brand.brandId).text(brand.BrandName).attr('data-name', brand.BrandName));
                        }
                    });
                },
            });
        });

        $(document).ready(function () {
            $("#VehicleTypeIdCreate").change(function () {
                var selectedVehicleTypeId = $(this).val();
                $.ajax({
                    url: '/UserInfo/GetVariants',
                    type: 'GET',
                    data: { vehicleTypeId: selectedVehicleTypeId },
                    success: function (result) {
                        var variantsDropdown = $("#Vehicle_VariantIdCreate");
                        variantsDropdown.empty();

                        variantsDropdown.prepend($('<option disabled selected></option>').text("Chọn loại hộp số"));

                        $.each(result, function (index, variant) {
                            variantsDropdown.append($('<option></option>').val(variant.VariantId).text(variant.VariantName));
                        });
                    },
                });

                $.ajax({
                    url: '/UserInfo/GetBrands',
                    type: 'GET',
                    data: { vehicleTypeId: selectedVehicleTypeId },
                    success: function (result) {
                        var brandsDropdown = $("#Vehicle_BrandIdCreate");
                        brandsDropdown.empty();

                        brandsDropdown.prepend($('<option disabled selected></option>').text("Chọn hãng xe"));

                        $.each(result, function (index, brand) {
                            brandsDropdown.append($('<option></option>').val(brand.BrandId).text(brand.BrandName));
                        });
                    },
                });
            });
        });

        $(document).ready(function () {
            $("#ProvinceCodeCreate").change(function () {
                var selectedProvinceCode = $(this).val();

                $.ajax({
                    url: '/UserInfo/GetDistrics',
                    type: 'GET',
                    data: { provinceCode: selectedProvinceCode },
                    success: function (result) {
                        var districtsDropdown = $("#DistrictCodeCreate");
                        districtsDropdown.empty();

                        districtsDropdown.prepend($('<option disabled selected></option>').text("Chọn quận/huyện"));

                        $.each(result, function (index, district) {
                            districtsDropdown.append($('<option></option>').val(district.code).text(district.name).attr('data-name', district.name));
                        });
                    },
                });
            });
        });

        $("#ProvinceCodeCreate").change(function () {
            var selectedProvinceNameCreate = $("#ProvinceCodeCreate option:selected").data('name');
            $("#SelectedProvinceNameCreate").val(selectedProvinceNameCreate);
        });

        $("#DistrictCodeCreate").change(function () {
            var selectedDistrictNameCreate = $("#DistrictCodeCreate option:selected").data('name');
            $("#SelectedDistrictNameCreate").val(selectedDistrictNameCreate);
        });

        $(document).ready(function () {
            $("#ImageUpLoadCreate").change(function () {
                var file = this.files[0];
                var reader = new FileReader();

                reader.onload = function (e) {
                    $("#imagePreviewCreate").html('<img style="width:100%; height:100%" src="' + e.target.result + '" alt="Xem trước hình ảnh" />');
                };

                reader.readAsDataURL(file);
            });
        });

        CKEDITOR.replace('inputContentCreate', {
            filebrowserUploadUrl: '@Url.Action("UploadImage", "Vehicle", new { area = "Admin" })',
            filebrowserImageUploadUrl: '@Url.Action("UploadImage", "Vehicle", new { area = "Admin" })'
        });
    </script>
}